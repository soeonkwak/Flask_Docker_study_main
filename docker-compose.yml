#여러 이미지들을 실행하는 방법 (백엔드, DB, 등 각각을 이미지로 만들어서 각각 도커 컨테이너에 올림)
version: '3.8'
services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    command: 'python main.py'
    ports:
      - 8001:5000 #Flask 기본 포드는 5000, 8000은 admin 프로젝트에서 장고한테 할당했으니까 여기는 8001로 설정
    volumes:
      - .:/app #로컬 프로젝트 파일(.)과 도커파일?이 서로 수정이 되어도 서로 반영이 됨.
    depends_on: #아래 DB 설정이 먼저 실행 --> services 실행
      - db

  #queue 컨테이너 생성, 똑같은 backend랑 똑같은 Dockerfile 사용
  queue:
    build:
      context: .
      dockerfile: Dockerfile
    command: 'python -u consumer.py' #원래는 매번 터미널 창에서 이 명령어 입력 하고 메세징 하던걸 걍 컨테이너로 올려서 저절로 실행되도록?
    depends_on: #나중에 db에 데이터 넣을 거라 옵션 추가
      - db

  db:
    image: mysql:5.7.22
    restart: always #db가 멈추면 앱이랑 도커 컨테이너도 멈추는데 재시작 할 수 있는 설정
    environment: #백엔드와 연결 하기 위한 설정
      MYSQL_DATABASE: main #admin 프로젝트랑 다른 컨테이너여서 데이터베이스명 안바꿔도 되지만 그냥 바꿈! admin -> main
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - .dbdata:/var/lib/mysql #db데이터가 여기에 반영됨?
    ports:
      - 33067:3306  #admin 프로젝트에서 쓰는 포트랑 다른 포트 써줌 .